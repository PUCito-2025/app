// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Brand {
  id      String    @id @default(uuid())
  name    String
  models  Model[]
}

model Model {
  id          String      @id @default(uuid())
  name        String
  bodyType    String
  brandId     String
  brand       Brand       @relation(fields: [brandId], references: [id])
  versions    Version[]
}

model Version {
  id              String      @id @default(uuid())
  versionName     String
  year            Int
  modelId         String
  model           Model       @relation(fields: [modelId], references: [id])
  trims           Trim[]
}

model Trim {
  id              String        @id @default(uuid())
  name            String
  motorSize       Int
  fuelType        String
  transmissionType String
  versionId       String
  version         Version       @relation(fields: [versionId], references: [id])
  carListings     CarListing[]
}

model Source {
  id          String        @id @default(uuid())
  baseUrl     String
  name        String
  carListings CarListing[]
}

model Seller {
  id          String        @id @default(uuid())
  name        String
  email       String
  phone       String
  type        String
  carListings CarListing[]
}

model CarListing {
  id            String      @id @default(uuid())
  sellerId      String
  seller        Seller      @relation(fields: [sellerId], references: [id])
  sourceId      String
  source        Source      @relation(fields: [sourceId], references: [id])
  url           String
  title         String
  description   String
  price         Decimal
  priceCurrency String
  trimId        String
  trim          Trim        @relation(fields: [trimId], references: [id])
  year          Int
  mileage       Int
  exteriorColor String
  interiorColor String
  isNew         Boolean
  location      String
  publishedAt   DateTime
  scrapedAt     DateTime
  images        Image[]
  priceHistory  PriceHistory[]
}

model Image {
  id          String      @id @default(uuid())
  listingId   String
  carListing  CarListing  @relation(fields: [listingId], references: [id])
  url         String
}

model PriceHistory {
  id            String    @id @default(uuid())
  price         Decimal
  priceCurrency String
  recordedAt    DateTime
  listingId     String
  carListing    CarListing @relation(fields: [listingId], references: [id])
}
